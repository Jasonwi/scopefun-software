stages:
  - exe
  - zip
  - ftp
        
#-------------------------------------------------------------------------------
# exe 
#-------------------------------------------------------------------------------

Build-Exe:
    stage: exe
    environment: 
        name: win
    tags:
        - ScopeFun
    artifacts:
      name: "ScopeFun-Win64"
      paths: 
         - sfExe/*.exe
         - sfExe/*.sha512
    cache:
        key: "%CI_COMMIT_REF_SLUG%"
        untracked: true
    allow_failure: true
    script:
        - powershell New-Item -ItemType Directory -name sfExe -Force
        - cd sfExe
        - cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" -S .. -B .
        - set "PATH=%PATH%;c:\msys\1.0\bin"
        - mingw32-make package

Build-Exe-Mac:
    stage: exe
    environment: 
        name: mac
    tags:
        - ScopeFunMac
    artifacts:
      name: "ScopeFun-Mac64"
      paths: 
         - sfExe/*.dmg
         - sfExe/*.sha512
    allow_failure: true
    script:
        - mkdir sfExe
        - cd sfExe
        - chmod +x ../lib/wxWidgets-3.0.4/src/stc/gen_iface.py
        - chmod +x ../lib/libusb-1.0.22/install-sh
        - PATH="/Applications/CMake.app/Contents/bin":"$PATH"
        - cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CMAKE_VERBOSE_MAKEFILE="true" -D CPACK_BINARY_DRAGNDROP="true" -S $CI_BUILDS_DIR/.. -B.
        - make package

Build-Exe-Linux:
    stage: exe
    environment: 
        name: linux
    tags:
        - ScopeFunLinux
    artifacts:
      name: "ScopeFun-Linux64"
      paths: 
         - sfExe/*.deb
         - sfExe/*.sha512
    cache:
        key: "$CI_COMMIT_REF_SLUG"
        untracked: true
    allow_failure: true
    script:
        - mkdir -p sfExe
        - cd sfExe
        - cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_BINARY_DEB="true" -D CPACK_BINARY_TZ="false" -D CPACK_BINARY_TGZ="false" -D CPACK_BINARY_STGZ="false" ..
        - make package

#-------------------------------------------------------------------------------
# zip 
#-------------------------------------------------------------------------------

Zip-Source:
    stage: zip
    environment: 
        name: win
    tags:
        - ScopeFun
    cache: {}
    allow_failure: true
    artifacts:
      name: "ScopeFun-Src-Win"
      paths: 
         - sfSrc/*.7z
         - sfSrc/*.sha512
    script:
        - powershell New-Item -ItemType Directory -name sfSrc -Force
        - cd sfSrc
        - cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" -S .. -B .
        - set "PATH=%PATH%;c:\msys\1.0\bin"
        - mingw32-make package_source
    when: always
        
Zip-Source-Linux:
    stage: zip
    environment: linux
    tags:
        - ScopeFunLinux
    cache: {}
    artifacts:
      name: "ScopeFun-Src-Linux"
      paths: 
         - sfSrc/*.7z
         - sfSrc/*.sha512
    dependencies: []
    allow_failure: true
    script:
        - mkdir -p sfSrc
        - cd sfSrc
        - cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" ..
        - make package_source
    when: always
        
Zip-Source-Mac:
    stage: zip
    environment: 
        name: mac
    tags:
        - ScopeFunMac
    cache: {}
    artifacts:
      name: "ScopeFun-Src-Mac"
      paths: 
         - sfSrc/*.7z
         - sfSrc/*.sha512
    dependencies: []
    allow_failure: true
    script:
        - mkdir sfSrc
        - cd sfSrc
        - PATH="/Applications/CMake.app/Contents/bin":"$PATH"
        - cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" -S .. -B .
        - make package_source
    when: always
        
#-------------------------------------------------------------------------------
# ftp
#-------------------------------------------------------------------------------

Upload-Ftp-Linux:
    stage: ftp
    environment:
        name: linux
    tags:
        - ScopeFunLinux
    cache: {}
    dependencies:
        - Build-Exe-Linux
        - Zip-Source-Linux
    script:
        - cd sfSrc
        - COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
        - mkdir -p Linux/COMMIT_TIME
        - copy ./../sfExe/*.deb     Linux\$COMMIT_TIME
        - copy ./../sfExe/*.sha512  Linux\$COMMIT_TIME
        - copy *.7z                 Linux\$COMMIT_TIME
        - copy *.sha512             Linux\$COMMIT_TIME
        - ftp "ftp://%FTP_USERNAME%:%FTP_PASSWORD%@ftp.scopefun.com/ "
              "cd Versions"
              "cd Linux"
              "put Linux\$COMMIT_TIME"
              "close"
              "exit"
    when: always
              
Upload-Ftp-Mac:
    stage: ftp
    environment: 
        name: mac
    tags:
        - ScopeFunMac
    cache: {}
    dependencies:
        - Build-Exe-Mac
        - Zip-Source-Mac
    script:
        - cd sfSrc
        - COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
        - mkdir -p Mac/COMMIT_TIME
        - copy ./../sfExe/*.deb     Mac\$COMMIT_TIME
        - copy ./../sfExe/*.sha512  Mac\$COMMIT_TIME
        - copy *.7z                 Mac\$COMMIT_TIME
        - copy *.sha512             Mac\$COMMIT_TIME
        - ftp "ftp://%FTP_USERNAME%:%FTP_PASSWORD%@ftp.scopefun.com/ "
              "cd Versions"
              "cd Mac"
              "put Mac\$COMMIT_TIME"
              "close"
              "exit"
    when: always
     
Upload-Ftp:
    stage: ftp
    environment: 
        name: win
    tags:
        - ScopeFun
    cache: {}
    dependencies:
        - Build-Exe
        - Zip-Source
    script:
        - cd sfSrc
        - git show -s --format=%ct $CI_COMMIT_SHA)>commit_time.txt
        - set -p COMMIT_TIME=<commit_time.txt
        - mkdir Windows\%COMMIT_TIME%
        - copy %cd%\..\sfExe\*.exe     Windows\%COMMIT_TIME%
        - copy %cd%\..\sfExe\*.sha512  Windows\%COMMIT_TIME%
        - copy *.7z                    Windows\%COMMIT_TIME%
        - copy *.sha512                Windows\%COMMIT_TIME%
        - winscp /ini=nul /command "open ftp://%FTP_USERNAME%:%FTP_PASSWORD%@ftp.scopefun.com/ "^
                                   "cd Versions"^
                                   "cd Windows"^
                                   "put Windows\%COMMIT_TIME%"^
                                   "close"^
                                   "exit"
    when: always