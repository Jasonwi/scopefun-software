stages:
  - build-exe
  - zip-source
  - upload-ftp

Build-Exe:
    stage: build-exe
    tags:
        - ScopeFun
    artifacts:
      name: "ScopeFun-Win64"
      paths: 
         - sfExe/*.exe
         - sfExe/*.sha512
    cache:
        key: "%CI_COMMIT_REF_SLUG%"
        untracked: true
    script:
        - powershell New-Item -ItemType Directory -name sfExe -Force
        - cd sfExe
        - cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" -S .. -B .
        - set "PATH=%PATH%;c:\msys\1.0\bin"
        - mingw32-make package

Build-Exe-Mac:
    stage: build-exe
    tags:
        - ScopeFunMac
    artifacts:
      name: "ScopeFun-Mac64"
      paths: 
         - sfExe/*.dmg
         - sfExe/*.sha512
    cache:
        key: "%CI_COMMIT_REF_SLUG%"
        untracked: true
    script:
        - mkdir sfExe
        - cd sfExe
        - chmod +x ../lib/wxWidgets-3.0.4/src/stc/gen_iface.py
        - PATH="/Applications/CMake.app/Contents/bin":"$PATH"
        - cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_BINARY_DRAGNDROP="true" -S .. -B .
        - make package

Build-Exe-Linux:
    stage: build-exe
    tags:
        - ScopeFunLinux
    artifacts:
      name: "ScopeFun-Linux64"
      paths: 
         - sfExe/*.deb
         - sfExe/*.sha512
    cache:
        key: "%CI_COMMIT_REF_SLUG%"
        untracked: true
    script:
        - mkdir -p sfExe
        - cd sfExe
        - cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_BINARY_DEB="true" -D CPACK_BINARY_TZ="false" -D CPACK_BINARY_TGZ="false" -D CPACK_BINARY_STGZ="false" ..
        - make package

Zip-Source:
    stage: zip-source
    tags:
        - ScopeFun
    cache:
        key: "%CI_JOB_NAME%"
        untracked: true
    dependencies: []
    script:
        - powershell New-Item -ItemType Directory -name sfSrc -Force
        - cd sfSrc
        - cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" -S .. -B .
        - set "PATH=%PATH%;c:\msys\1.0\bin"
        - mingw32-make package_source
        
Zip-Source-Linux:
    stage: zip-source
    tags:
        - ScopeFunLinux
    cache:
        key: "%CI_JOB_NAME%"
        untracked: true
    dependencies: []
    script:
        - mkdir -p sfSrc
        - cd sfSrc
        - cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="false" ..
        - make package_source
        
Zip-Source-Mac:
    stage: zip-source
    tags:
        - ScopeFunMac
    cache:
        key: "%CI_JOB_NAME%"
        untracked: true
    dependencies: []
    script:
        - mkdir sfSrc
        - cd sfSrc
        - PATH="/Applications/CMake.app/Contents/bin":"$PATH"
        - cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE="Release" -D CPACK_SOURCE_ZIP="true" -S .. -B .
        - make package_source

Upload-Ftp:
    stage: upload-ftp
    tags:
        - ScopeFun
    dependencies: []
    script:
        - cd sfSrc
        - powershell get-date -format {yyyyMMdd} > date.txt
        - powershell get-date -format {HHmmss}   > time.txt
        - set /p date=<date.txt
        - set /p time=<time.txt
        - mkdir Windows\%date%-%time%
        - copy %cd%\..\sfExe\*.exe     Windows\%date%-%time%
        - copy %cd%\..\sfExe\*.sha512  Windows\%date%-%time%
        - copy *.7z                    Windows\%date%-%time%
        - copy *.sha512                Windows\%date%-%time%
        - winscp /ini=nul /command "open ftp://%FTP_USERNAME%:%FTP_PASSWORD%@ftp.scopefun.com/ "^
                                   "cd Versions"^
                                   "cd Windows"^
                                   "put Windows\%date%-%time%"^
                                   "close"^
                                   "exit"